import type { DatasourceField, FunctionSuggestion } from "@/types/datasource"

// Dummy data for datasource fields
export const datasourceFields: DatasourceField[] = [
  // Underlying data fields - Dimensions
  {
    id: "field_1",
    name: "Date",
    key: "date",
    dataType: "date",
    fieldType: "dimension",
    description: "The date when the event occurred",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_2",
    name: "Country",
    key: "country",
    dataType: "text",
    fieldType: "dimension",
    description: "The country where the event occurred",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_3",
    name: "Device",
    key: "device",
    dataType: "text",
    fieldType: "dimension",
    description: "The device used by the user",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_4",
    name: "User ID",
    key: "user_id",
    dataType: "text",
    fieldType: "dimension",
    description: "Unique identifier for the user",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_5",
    name: "Campaign URL",
    key: "campaign_url",
    dataType: "url",
    fieldType: "dimension",
    description: "URL of the marketing campaign",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_6",
    name: "Browser",
    key: "browser",
    dataType: "text",
    fieldType: "dimension",
    description: "Web browser used by the visitor",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_7",
    name: "Operating System",
    key: "os",
    dataType: "text",
    fieldType: "dimension",
    description: "Operating system of the visitor",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_8",
    name: "Referrer",
    key: "referrer",
    dataType: "text",
    fieldType: "dimension",
    description: "The referring website or source",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_9",
    name: "Landing Page",
    key: "landing_page",
    dataType: "url",
    fieldType: "dimension",
    description: "First page visited in the session",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_10",
    name: "UTM Source",
    key: "utm_source",
    dataType: "text",
    fieldType: "dimension",
    description: "UTM source parameter from the URL",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_11",
    name: "UTM Medium",
    key: "utm_medium",
    dataType: "text",
    fieldType: "dimension",
    description: "UTM medium parameter from the URL",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_12",
    name: "UTM Campaign",
    key: "utm_campaign",
    dataType: "text",
    fieldType: "dimension",
    description: "UTM campaign parameter from the URL",
    isCalculated: false,
    source: "underlying",
  },

  // Underlying data fields - Metrics
  {
    id: "field_13",
    name: "Sessions",
    key: "sessions",
    dataType: "number",
    fieldType: "metric",
    description: "Number of sessions",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_14",
    name: "Page Views",
    key: "page_views",
    dataType: "number",
    fieldType: "metric",
    description: "Number of page views",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_15",
    name: "Revenue",
    key: "revenue",
    dataType: "currency",
    fieldType: "metric",
    description: "Total revenue generated",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_16",
    name: "Conversion Rate",
    key: "conversion_rate",
    dataType: "number",
    fieldType: "metric",
    description: "Percentage of users who completed a desired action",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_17",
    name: "Bounce Rate",
    key: "bounce_rate",
    dataType: "number",
    fieldType: "metric",
    description: "Percentage of single-page sessions",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_18",
    name: "Average Session Duration",
    key: "avg_session_duration",
    dataType: "number",
    fieldType: "metric",
    description: "Average length of a session in seconds",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_19",
    name: "Transactions",
    key: "transactions",
    dataType: "number",
    fieldType: "metric",
    description: "Number of completed purchases",
    isCalculated: false,
    source: "underlying",
  },
  {
    id: "field_20",
    name: "Average Order Value",
    key: "avg_order_value",
    dataType: "currency",
    fieldType: "metric",
    description: "Average value of each order",
    isCalculated: false,
    source: "underlying",
  },

  // Calculated fields
  {
    id: "calc_1",
    name: "Revenue per Session",
    key: "revenue_per_session",
    dataType: "currency",
    fieldType: "metric",
    description: "Average revenue generated per session",
    isCalculated: true,
    source: "calculated",
    formula: "SUM(Revenue) / SUM(Sessions)",
  },
  {
    id: "calc_2",
    name: "Is Mobile",
    key: "is_mobile",
    dataType: "boolean",
    fieldType: "dimension",
    description: "Whether the device is mobile or not",
    isCalculated: true,
    source: "calculated",
    formula: 'CONTAINS(Device, "Mobile")',
  },
  {
    id: "calc_3",
    name: "Month",
    key: "month",
    dataType: "date",
    fieldType: "dimension",
    description: "Month extracted from the date",
    isCalculated: true,
    source: "calculated",
    formula: "MONTH(Date)",
  },
  {
    id: "calc_4",
    name: "Year",
    key: "year",
    dataType: "date",
    fieldType: "dimension",
    description: "Year extracted from the date",
    isCalculated: true,
    source: "calculated",
    formula: "YEAR(Date)",
  },
  {
    id: "calc_5",
    name: "Quarter",
    key: "quarter",
    dataType: "date",
    fieldType: "dimension",
    description: "Quarter extracted from the date",
    isCalculated: true,
    source: "calculated",
    formula: "QUARTER(Date)",
  },
  {
    id: "calc_6",
    name: "ROI",
    key: "roi",
    dataType: "number",
    fieldType: "metric",
    description: "Return on investment",
    isCalculated: true,
    source: "calculated",
    formula: "(SUM(Revenue) - Cost) / Cost",
  },
]

// Looker Studio function suggestions for the formula editor
export const functionSuggestions: FunctionSuggestion[] = [
  {
    name: "SUM",
    description: "Returns the sum of a numeric field",
    syntax: "SUM(field)",
    category: "Aggregation",
  },
  {
    name: "AVG",
    description: "Returns the average of a numeric field",
    syntax: "AVG(field)",
    category: "Aggregation",
  },
  {
    name: "COUNT",
    description: "Returns the count of records",
    syntax: "COUNT(field)",
    category: "Aggregation",
  },
  {
    name: "MAX",
    description: "Returns the maximum value of a field",
    syntax: "MAX(field)",
    category: "Aggregation",
  },
  {
    name: "MIN",
    description: "Returns the minimum value of a field",
    syntax: "MIN(field)",
    category: "Aggregation",
  },
  {
    name: "CONCAT",
    description: "Concatenates two or more strings",
    syntax: "CONCAT(string1, string2, ...)",
    category: "Text",
  },
  {
    name: "CONTAINS",
    description: "Checks if a string contains another string",
    syntax: "CONTAINS(string, substring)",
    category: "Text",
  },
  {
    name: "DATE",
    description: "Creates a date from year, month, and day values",
    syntax: "DATE(year, month, day)",
    category: "Date",
  },
  {
    name: "YEAR",
    description: "Extracts the year from a date",
    syntax: "YEAR(date)",
    category: "Date",
  },
  {
    name: "MONTH",
    description: "Extracts the month from a date",
    syntax: "MONTH(date)",
    category: "Date",
  },
  {
    name: "DAY",
    description: "Extracts the day from a date",
    syntax: "DAY(date)",
    category: "Date",
  },
  {
    name: "QUARTER",
    description: "Extracts the quarter from a date",
    syntax: "QUARTER(date)",
    category: "Date",
  },
  {
    name: "IF",
    description: "Returns one value if a condition is true and another if it is false",
    syntax: "IF(condition, value_if_true, value_if_false)",
    category: "Logical",
  },
  {
    name: "AND",
    description: "Returns TRUE if all conditions are true",
    syntax: "AND(condition1, condition2, ...)",
    category: "Logical",
  },
  {
    name: "OR",
    description: "Returns TRUE if any condition is true",
    syntax: "OR(condition1, condition2, ...)",
    category: "Logical",
  },
  {
    name: "NOT",
    description: "Returns the opposite of a boolean value",
    syntax: "NOT(condition)",
    category: "Logical",
  },
]
